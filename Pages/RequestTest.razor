@page "/request"

@using System.IO
@using System.Net
@using System.Text.Json
@using Components

@inject ChemKit.Datasources.pubchem.Services.SubstanceService _substanceService
@inject ChemKit.Datasources.pubchem.Services.CompoundService _compoundService

<MudPaper style="max-width: 50%;">
    <MudGrid Justify="Justify.SpaceAround" Spacing="2" style="margin: 1%;">
        <MudTextField Variant="Variant.Outlined" T="string" @bind-value="@InputValue" style="margin: 1%;" />
        <MudButton Color="Color.Primary" @onclick="@(() => OnSubmit())" style="margin: 1%;">Submit</MudButton>

        <MudButton @onclick="ExpandAll" style="margin: 1%; padding-right: 5%;">Expand All</MudButton>
    </MudGrid>
</MudPaper>

@if (!_loading && jsonObjects.Count() > 0)
{
    <MudGrid Justify="Justify.SpaceAround" Spacing="2" style="margin: 1%;">
    @foreach (var jsonObject in jsonObjects)
        {
            <MudItem xs="12" sm="6" md="4" lg="3">
                <MudPaper Elevation="1" Class="pa-3">
                    <JsonObjectViewer ObjectData="@jsonObject" @bind-ExpandAll="expandAll" />
                </MudPaper>
            </MudItem>
        }
    </MudGrid>
}
else if (_loading)
{
}

@code
{
    public string InputValue { get; set; } = "";
    public string Response { get; set; } = "";
    private bool expandAll = false;

    private bool _loading = false;

    private void ExpandAll()
    {
        expandAll = !expandAll;
        StateHasChanged();
    }

    private List<JsonElement> jsonObjects = new List<JsonElement> { };

    private async Task OnSubmit()
    {
        _loading = true;
        StateHasChanged();

        var substances = await _substanceService.SearchSubstancesAsync(InputValue);

        Response = string.Empty;

        jsonObjects = new List<JsonElement>();

        foreach (var s in substances)
        {
            jsonObjects.Add(
                JsonSerializer.Deserialize<JsonElement>(s.PrintDetails())
            );
        }

        _loading = false;
        StateHasChanged();
    }
}